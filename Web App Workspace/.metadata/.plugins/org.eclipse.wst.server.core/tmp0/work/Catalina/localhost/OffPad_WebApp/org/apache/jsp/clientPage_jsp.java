/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2015-12-29 18:12:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class clientPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<meta name=\"description\" content=\"\">\n");
      out.write("<meta name=\"author\" content=\"\">\n");
      out.write("\n");
      out.write("<title>OffPAD Prototype By Sijan</title>\n");
      out.write("<link rel='stylesheet' type='text/css' href='styles\\style.css' />\n");
      out.write("<!-- Bootstrap Core CSS -->\n");
      out.write("<link href=\"styles/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("<!-- FontAwesome CSS -->\n");
      out.write("<link href=\"css/font-awesome.min.css\" rel=\"stylesheet\">\n");
      out.write("<!-- Custom CSS -->\n");
      out.write("<link href=\"styles/simple-sidebar.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n");
      out.write("<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n");
      out.write("<!--[if lt IE 9]>\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n");
      out.write("    <![endif]-->\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<nav class=\"navbar navbar-default no-margin\"> <!-- Brand and toggle get grouped for better mobile display -->\n");
      out.write("\t<div class=\"navbar-header fixed-brand\">\n");
      out.write("\t\t<a class=\"navbar-brand\" href=\"#\"><i class=\"fa fa-university fa-4\"></i>\n");
      out.write("\t\t\t OFFPad Prototype </a>\n");
      out.write("\t</div>\n");
      out.write("\t<!-- navbar-header-->\n");
      out.write("\t<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("\t\t<ul class=\"nav navbar-nav\">\n");
      out.write("\t\t\t<li class=\"active\"><button class=\"navbar-toggle collapse in\"\n");
      out.write("\t\t\t\t\tdata-toggle=\"collapse\" id=\"menu-toggle-2\">\n");
      out.write("\t\t\t\t\t<span class=\"glyphicon glyphicon-th-large\" aria-hidden=\"true\"></span>\n");
      out.write("\t\t\t\t</button></li>\n");
      out.write("\t\t</ul>\n");
      out.write("\t</div>\n");
      out.write("\t<!-- bs-example-navbar-collapse-1 --> </nav>\n");
      out.write("\t<div id=\"wrapper\">\n");
      out.write("\t\t<!-- Sidebar -->\n");
      out.write("\t\t<div id=\"sidebar-wrapper\">\n");
      out.write("\t\t\t<ul class=\"sidebar-nav nav-pills nav-stacked\" id=\"menu\">\n");
      out.write("\t\t\t\t<li><a href=\"index.html\"><span\n");
      out.write("\t\t\t\t\t\tclass=\"fa-stack fa-lg pull-left\"><i\n");
      out.write("\t\t\t\t\t\t\tclass=\"fa fa-group fa-stack-1x \"></i></span>Overview</a></li>\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"ClientServlet\"> <span\n");
      out.write("\t\t\t\t\t\tclass=\"fa-stack fa-lg pull-left\"><i\n");
      out.write("\t\t\t\t\t\t\tclass=\"fa fa-money fa-stack-1x \"></i></span>Transfer Amount\n");
      out.write("\t\t\t\t</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"#\"><span class=\"fa-stack fa-lg pull-left\"><i\n");
      out.write("\t\t\t\t\t\t\tclass=\"fa fa-history fa-stack-1x \"></i></span>History</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"#\"><span class=\"fa-stack fa-lg pull-left\"><i\n");
      out.write("\t\t\t\t\t\t\tclass=\"fa fa-code fa-stack-1x \"></i></span>About</a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- /#sidebar-wrapper -->\n");
      out.write("\n");
      out.write("\t\t<!-- Page Content -->\n");
      out.write("\t\t<div id=\"page-content-wrapper\">\n");
      out.write("\t\t\t<div class=\"container-fluid\">\n");
      out.write("\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t<div class=\"col-lg-12\">\n");
      out.write("\t\t\t\t\t\t<h1>Transfer Amount</h1>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<div class='login'>\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<form action='ServerServlet' method='GET'>\n");
      out.write("\t\t\t\t\t\t\t\t    Destination Account Number: <input type='text' name='destination' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rDest}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'> \n");
      out.write("\t\t\t\t\t\t\t\t\tAmount: <input type='text' name='amount' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rAmt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' /> \n");
      out.write("\t\t\t\t\t\t\t\t\tKID: <input type='text' name='amount' value='' /> \n");
      out.write("\t\t\t\t\t\t\t\t\tRemarks:<input type='text' name='amount' value='' /> <br /> \n");
      out.write("\t\t\t\t\t\t\t\t\t<input type='hidden' name='hash' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hashReceived}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' />\n");
      out.write("\t\t\t\t\t\t\t\t\t<br> <input type='submit' class=\"btn btn-large btn-primary\" value='Transfer Amount' />\n");
      out.write("\t\t\t\t\t\t\t</form>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- /#page-content-wrapper -->\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t<!-- /#wrapper -->\n");
      out.write("\n");
      out.write("\t<!-- jQuery -->\n");
      out.write("\t<script src=\"js/jquery.js\"></script>\n");
      out.write("\n");
      out.write("\t<!-- Bootstrap Core JavaScript -->\n");
      out.write("\t<script src=\"js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script>\n");
      out.write("\t$(\"#menu-toggle\").click(function(e) {\n");
      out.write("\t\te.preventDefault();\n");
      out.write("\t\t$(\"#wrapper\").toggleClass(\"toggled\");\n");
      out.write("\t});\n");
      out.write("\t$(\"#menu-toggle-2\").click(function(e) {\n");
      out.write("\t\te.preventDefault();\n");
      out.write("\t\t$(\"#wrapper\").toggleClass(\"toggled-2\");\n");
      out.write("\t\t$('#menu ul').hide();\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tfunction initMenu() {\n");
      out.write("\t\t$('#menu ul').hide();\n");
      out.write("\t\t$('#menu ul').children('.current').parent().show();\n");
      out.write("\t\t//$('#menu ul:first').show();\n");
      out.write("\t\t$('#menu li a').click(function() {\n");
      out.write("\t\t\tvar checkElement = $(this).next();\n");
      out.write("\t\t\tif ((checkElement.is('ul')) && (checkElement.is(':visible'))) {\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif ((checkElement.is('ul')) && (!checkElement.is(':visible'))) {\n");
      out.write("\t\t\t\t$('#menu ul:visible').slideUp('normal');\n");
      out.write("\t\t\t\tcheckElement.slideDown('normal');\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t$(document).ready(function() {\n");
      out.write("\t\tinitMenu();\n");
      out.write("\t});\n");
      out.write("</script>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
