package com.offpad.demoprototype;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.Writer;
import java.security.PrivateKey;
import java.util.Date;

import javax.crypto.Cipher;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class clientBrowser
 */
@WebServlet("/ClientServlet")
public class ClientServlet extends HttpServlet {
	// This would be filled from the another class which would be running in the
	// background....

	private static final long serialVersionUID = 1L;
	public static String hashReceived = "nothing", rDest = "Not_Received_Yet",
			rAmt = "000000";

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public ClientServlet() {
		super();
		
		// TODO Auto-generated constructor stub
		try {
			String desktop = System.getProperty("user.home") + "/Desktop/";
			Reader file = new FileReader(desktop + "offpad.txt");
			System.out.println("File reading successful!");
			BufferedReader buff = new BufferedReader(file);
			hashReceived = buff.readLine();
			buff.close();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		/*now we should decrypt it using RSA */
		/*RECEIVED IS EncryptedMessage+publickey: publicKey
		 */
		
		System.out.println("total Received:"+hashReceived);
		String[] parts = string.split("-");
		String part1 = parts[0]; // 004
		String part2 = parts[1]; // 034556
		
		// now decrypt it to fill in the forms auto...
		// Here is the decryption part..Sijan Gurung
		int p = 0, lo = 0;
		for (int i = 0; i < hashReceived.length(); i++) {
			if (hashReceived.charAt(i) == '+') {
				p++;
				if(p == 1){
					lo = i;
				rDest = hashReceived.substring(0, i);
				}else if (p == 2) {
					rAmt = hashReceived.substring(lo + 1, i);
					break;
				}
			}
		}
	}
 
	public  byte[] decrypt (byte[] inputBytes, PrivateKey key,  String xform) throws Exception{
		Cipher cipher = Cipher.getInstance(xform);
		cipher.init(Cipher.DECRYPT_MODE, key);
		return cipher.doFinal(inputBytes);
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	@Override
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	/*
		// we do not set content type, headers, cookies etc.
        // resp.setContentType("text/html"); // while redirecting as
        // it would most likely result in an IllegalStateException

        // "/" is relative to the context root (your web-app name)
        RequestDispatcher view = request.getRequestDispatcher("/WEB-INF/html/index.html");
        // don't add your web-app name to the path

        view.forward(request, response); 
     */
		// Set response content type
		performTask(request, response); //This method reloads this page once in 15 seconds....
		response.setContentType("text/html");
	
		request.setAttribute("rDest", rDest);
		request.setAttribute("rAmt", rAmt);
		request.setAttribute("hashReceived", hashReceived);

	    RequestDispatcher view=request.getRequestDispatcher("index.jsp");
	    view.forward(request,response);
		
				
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	@Override
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		//After this page is done... remove the values
		//This is for writing dummy values...after wards...
		String desktop = System.getProperty("user.home") + "/Desktop/";
		BufferedWriter writer = null;
		Writer write_file = new FileWriter(desktop+"offpad.txt");
        writer = new BufferedWriter(write_file);
        writer.write("Not_Received_Yet+000000+testing...");
        writer.close();
	}
	private void performTask(HttpServletRequest request, HttpServletResponse response) throws ServletException,
	IOException {
		response.setContentType("text/html");
		response.addHeader("Refresh", "15");
		new ClientServlet();
	}

}
